{"version":3,"sources":["hooks/http.hook.js","actions/index.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","reducers/heroes.js","reducers/filters.js","store/index.js","index.js"],"names":["useHttp","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","heroesFetching","type","heroesFetched","heroes","payload","heroesFetchingError","filtersFetching","filtersFetched","filters","filtersFetchingError","HeroesListItem","elementClassName","name","description","element","onDelete","className","src","alt","style","onClick","aria-label","Spinner","role","HeroesList","filteredHeroesSelector","createSelector","state","activeFilter","filter","item","filteredHeroes","useSelector","heroesLoadingStatus","dispatch","useDispatch","useEffect","then","catch","fetchHeroes","id","console","log","heroDeleted","err","arr","elements","lenght","CSSTransition","timeout","classNames","map","props","TransitionGroup","component","HeroesAddForm","useState","heroName","setHeroName","heroDescr","setHeroDescr","heroElement","setHeroElement","filtersLoadingStatus","onSubmit","e","preventDefault","hero","newHero","uuidv4","JSON","stringify","res","htmlFor","required","placeholder","value","onChange","target","length","label","renderFilters","HeroesFilters","fetchFilters","btnClass","App","initialState","action","store","createStore","combineReducers","compose","applyMiddleware","ReduxThunk","next","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c6a941f.chunk.js","sourcesContent":["import { useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            return data;\r\n        } catch(e) {\r\n\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n    return {request,\r\n    \r\n    \r\n    \r\n    }\r\n}","export const fetchHeroes = (request) => (dispatch) => {\r\n    dispatch(heroesFetching());\r\n    request(\"http://localhost:3001/heroes\")\r\n        .then(data => dispatch(heroesFetched(data)))\r\n        .catch(() => dispatch(heroesFetchingError()))\r\n}\r\n\r\nexport const fetchFilters = (request) => (dispatch) => {\r\n    dispatch(filtersFetching());\r\n    request(\"http://localhost:3001/filters\")\r\n        .then(data => dispatch(filtersFetched(data)))\r\n        .catch(() => dispatch(filtersFetchingError()))\r\n}\r\n\r\nexport const heroesFetching = () => {\r\n    return {\r\n        type: 'HEROES_FETCHING',\r\n    }\r\n}\r\n\r\nexport const heroesFetched = (heroes) => {\r\n    return {\r\n        type: 'HEROES_FETCHED',\r\n        payload: heroes\r\n    }\r\n}\r\n\r\nexport const heroesFetchingError = () => {\r\n    return {\r\n        type: 'HEROES_FETCHING_ERROR',\r\n    }\r\n}\r\n\r\nexport const filtersFetching = () => {\r\n    return {\r\n        type: 'FILTERS_FETCHING',\r\n    }\r\n}\r\n\r\nexport const filtersFetched = (filters) => {\r\n    return {\r\n        type: 'FILTERS_FETCHED',\r\n        payload: filters\r\n    }\r\n}\r\n\r\nexport const filtersFetchingError = () => {\r\n    return {\r\n        type: 'FILTERS_FETCHING_ERROR',\r\n    }\r\n}\r\n\r\nexport const activeFilterChanged = (filter) => {\r\n    return {\r\n        type: 'ACTIVE_FILTER_CHANGED',\r\n        payload: filter\r\n    }\r\n}\r\n\r\nexport const heroCreated = (hero) => {\r\n    return {\r\n        type: 'HERO_CREATED',\r\n        payload: hero\r\n    }\r\n}\r\n\r\nexport const heroDeleted = (id) => {\r\n    return {\r\n        type: 'HERO_DELETED',\r\n        payload: id\r\n    }\r\n}","const HeroesListItem = ({ name, description, element, onDelete }) => {\r\n    let elementClassName;\r\n\r\n    switch (element) {\r\n        case 'fire':\r\n            elementClassName = \"bg-danger bg-gradient\";\r\n            break;\r\n        case 'water':\r\n            elementClassName = \"bg-primary bg-gradient\";\r\n            break;\r\n        case 'wind':\r\n            elementClassName = \"bg-success bg-gradient\";\r\n            break;\r\n        case 'earth':\r\n            elementClassName = \"bg-warning bg-gradient\";\r\n            break;\r\n        default:\r\n            elementClassName = \"bg-secondary bg-gradient\";\r\n    }\r\n\r\n\r\n    return (\r\n        <li\r\n            className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}>\r\n            <img src=\"https://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unkown-hero.jpg\"\r\n                className=\"img-fluid w-25 d-inline\"\r\n                alt=\"unkown hero\"\r\n                style={{ 'objectFit': 'cover' }} />\r\n            <div className=\"card-body\">\r\n\r\n                <h3 className=\"card-title\">{name}</h3>\r\n                <p className=\"card-text\">{description}</p>\r\n            </div>\r\n            <span onClick={onDelete}\r\n                className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\r\n                <button type=\"button\" className=\"btn-close btn-close\" aria-label=\"Close\"></button>\r\n            </span>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default HeroesListItem;","\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import { useHttp } from '../../hooks/http.hook';\r\nimport { useEffect, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { createSelector } from 'reselect';\r\n\r\nimport { fetchHeroes, heroDeleted } from '../../actions';\r\nimport HeroesListItem from '../heroesListItem/HeroesListItem';\r\nimport Spinner from '../spinner/Spinner';\r\n\r\nimport './heroesList.scss';\r\n\r\nconst HeroesList = () => {\r\n    const filteredHeroesSelector = createSelector(\r\n        (state) => state.filters.activeFilter,\r\n        (state) => state.heroes.heroes,\r\n        (filter, heroes) => {\r\n            if (filter === 'all') {\r\n                return heroes;\r\n            } else {\r\n                return heroes.filter(item => item.element === filter);\r\n            }\r\n        }\r\n    );\r\n\r\n    const filteredHeroes = useSelector(filteredHeroesSelector);\r\n    const heroesLoadingStatus = useSelector(state => state.heroes.heroesLoadingStatus);\r\n    const dispatch = useDispatch();\r\n    const { request } = useHttp();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchHeroes(request));\r\n    }, [dispatch, request]);\r\n    \r\n\r\n    const onDelete = useCallback((id) => {\r\n        request(`http://localhost:3001/heroes/${id}`, \"DELETE\")\r\n            .then(data => console.log(data, 'Deleted'))\r\n            .then(() => dispatch(heroDeleted(id))) \r\n            .catch(err => console.log(err));\r\n    }, [dispatch, request]);\r\n    \r\n\r\n    if (heroesLoadingStatus === \"loading\") {\r\n        return <Spinner />;\r\n    } else if (heroesLoadingStatus === \"error\") {\r\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\r\n    }\r\n\r\n    const renderHeroesList = (arr) => {\r\n        if (arr.lenght === 0) {\r\n            return (\r\n                <CSSTransition\r\n                    timeout={0}\r\n                    classNames=\"hero\">\r\n                    <h5 className=\"text-center mt-5\">Героев пока нет</h5>\r\n                </CSSTransition>\r\n            )\r\n        }\r\n\r\n        return arr.map(({ id, ...props }) => {\r\n            return (\r\n                <CSSTransition\r\n                    key={id}\r\n                    timeout={500}\r\n                    classNames=\"hero\">\r\n                    <HeroesListItem {...props} onDelete={() => onDelete(id)} />\r\n                </CSSTransition>\r\n            )\r\n        })\r\n    }\r\n\r\n    const elements = renderHeroesList(filteredHeroes);\r\n    return (\r\n        <TransitionGroup component=\"ul\">\r\n            {elements}\r\n        </TransitionGroup>\r\n    )\r\n}\r\n\r\nexport default HeroesList;","import { useHttp } from '../../hooks/http.hook';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { heroCreated } from '../../actions';\r\n\r\nconst HeroesAddForm = () => {\r\n    const [heroName, setHeroName] = useState('');\r\n    const [heroDescr, setHeroDescr] = useState('');\r\n    const [heroElement, setHeroElement] = useState('');\r\n\r\n    const { filters, filtersLoadingStatus } = useSelector(state => state.filters);\r\n    const dispatch = useDispatch();\r\n    const { request } = useHttp();\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        const newHero = {\r\n            id: uuidv4(),\r\n            name: heroName,\r\n            description: heroDescr,\r\n            element: heroElement\r\n        }\r\n\r\n        request(\"http://localhost:3001/heroes\", \"POST\", JSON.stringify(newHero))\r\n            .then(res => console.log(res, 'Отправка успешна'))\r\n            .then(dispatch(heroCreated(newHero)))\r\n            .catch(err => console.log(err));\r\n\r\n        setHeroName('');\r\n        setHeroDescr('');\r\n        setHeroElement('');\r\n    }\r\n\r\n    const renderFilters = (filters, status) => {\r\n        if (status === \"loading\") {\r\n            return <option>Загрузка элементов</option>\r\n        } else if (status === \"error\") {\r\n            return <option>Ошибка загрузки</option>\r\n        }\r\n    \r\n        if (filters && filters.length > 0) {\r\n            return filters.map(({ name, label }) => {\r\n                if (name === 'all') {\r\n                    return null; // Return null for this case\r\n                }\r\n    \r\n                return <option key={name} value={name}>{label}</option>;\r\n            });\r\n        }\r\n    \r\n        return null; // Return null if filters is falsy or empty\r\n    }\r\n\r\n    return (\r\n        <form className=\"border p-4 shadow-lg rounded\" onSubmit={onSubmitHandler} >\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Имя нового героя</label>\r\n                <input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    className=\"form-control\"\r\n                    id=\"name\"\r\n                    placeholder=\"Как меня зовут?\"\r\n                    value={heroName}\r\n                    onChange={(e) => setHeroName(e.target.value)} />\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Описание</label>\r\n                <textarea\r\n                    required\r\n                    name=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"text\"\r\n                    placeholder=\"Что я умею?\"\r\n                    style={{ \"height\": '130px' }}\r\n                    value={heroDescr}\r\n                    onChange={(e) => setHeroDescr(e.target.value)} />\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"element\" className=\"form-label\">Выбрать элемент героя</label>\r\n                <select\r\n                    required\r\n                    className=\"form-select\"\r\n                    id=\"element\"\r\n                    value={heroElement}\r\n                    onChange={(e) => setHeroElement(e.target.value)}>\r\n                    <option value=\"\">Я владею элементом...</option>\r\n                    {renderFilters(filters, filtersLoadingStatus)}\r\n                </select>\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary\">Cоздать</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default HeroesAddForm;","import { useHttp } from '../../hooks/http.hook';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { fetchFilters, activeFilterChanged } from '../../actions';\r\nimport Spinner from '../spinner/Spinner';\r\n\r\nconst HeroesFilters = () => {\r\n\r\n    const { filters, filtersLoadingStatus, activeFilter } = useSelector(state => state.filters);\r\n    const dispatch = useDispatch();\r\n    const { request } = useHttp();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchFilters(request));\r\n    }, [dispatch, request]);\r\n    \r\n\r\n    if (filtersLoadingStatus === \"loading\") {\r\n        return <Spinner />;\r\n    } else if (filtersLoadingStatus === \"error\") {\r\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\r\n    }\r\n\r\n    const renderFilters = (arr) => {\r\n        if (arr.lenght === 0) {\r\n            return <h5 className=\"text-center mt-5\">Фильтры не найдены</h5>\r\n        }\r\n\r\n        return arr.map(({ name, className, label }) => {\r\n\r\n            const btnClass = classNames('btn', className, {\r\n                'active': name === activeFilter\r\n            });\r\n\r\n            return <button\r\n                key={name}\r\n                id={name}\r\n                className={btnClass}\r\n                onClick={() => dispatch(activeFilterChanged(name))}\r\n            >{label}</button>\r\n        })\r\n    }\r\n\r\n    const elements = renderFilters(filters);\r\n\r\n    return (\r\n        <div className=\"card shadow-lg mt-4\">\r\n            <div className=\"card-body\">\r\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\r\n                <div className=\"btn-group\">\r\n                    {elements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroesFilters;","import HeroesList from '../heroesList/HeroesList';\r\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\r\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\r\n\r\nimport './app.scss';\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <main className=\"app\">\r\n            <div className=\"content\">\r\n                <HeroesList/>\r\n                <div className=\"content_interactive\">\r\n                    <HeroesAddForm/>\r\n                    <HeroesFilters/>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default App;","const initialState = {\r\n    heroes: [],\r\n    heroesLoadingStatus: 'idle'\r\n}\r\n\r\nconst heroes = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'HEROES_FETCHING':\r\n            return {\r\n                ...state,\r\n                heroesLoadingStatus: 'loading'\r\n            }\r\n        case 'HEROES_FETCHED':\r\n            return {\r\n                ...state,\r\n                heroes: action.payload,\r\n                heroesLoadingStatus: 'idle'\r\n            }\r\n        case 'HEROES_FETCHING_ERRROR':\r\n            return {\r\n                ...state,\r\n                heroesLoadingStatus: 'error'\r\n            }\r\n        case 'HERO_CREATED':\r\n            return {\r\n                ...state,\r\n                heroes: [...state.heroes, action.payload]\r\n            }\r\n        case 'HERO_DELETED':\r\n            return {\r\n                ...state,\r\n                heroes: state.heroes.filter(item => item.id !== action.payload)\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default heroes;","const initialState = {\r\n    filters: [],\r\n    filtersLoadingStatus: 'idle',\r\n    activeFilter: 'all'\r\n}\r\n\r\nconst filters = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FILTERS_FETCHING':\r\n            return {\r\n                ...state,\r\n                filtersLoadingStatus: 'loading'\r\n            }\r\n        case 'FILTERS_FETCHED':\r\n            return {\r\n                ...state,\r\n                filters: action.payload,\r\n                filtersLoadingStatus: 'idle'\r\n            }\r\n        case 'FILTERS_FETCHING_ERROR':\r\n            return {\r\n                ...state,\r\n                filtersLoadingStatus: 'error'\r\n            }\r\n        case 'ACTIVE_FILTER_CHANGED':\r\n            return {\r\n                ...state,\r\n                activeFilter: action.payload\r\n            }\r\n            default: return state\r\n    }\r\n}\r\n\r\nexport default filters;","import {createStore, combineReducers, compose, applyMiddleware} from 'redux';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport heroes from '../reducers/heroes';\r\nimport filters from '../reducers/filters';\r\n\r\nconst stringMiddleware = () => (next) => (action) => {\r\n    if (typeof action === 'string') {\r\n        return next({\r\n            type: action\r\n        })\r\n    }\r\n    return next(action)\r\n};\r\n\r\nconst store = createStore(\r\n    combineReducers({heroes,filters}),\r\n    compose(applyMiddleware(ReduxThunk, stringMiddleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n);\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from './components/app/App';\r\nimport store from './store';\r\n\r\nimport './styles/index.scss';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}